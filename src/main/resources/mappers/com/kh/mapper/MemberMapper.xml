<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.mapper.MemberMapper">
	<!-- 사용자 정의 resultMap 요소 정의 -->
	<resultMap type="Member" id="memberMap">
		<result property="userNo" column="user_no" />
		<result property="userId" column="user_id" />
		<result property="userPw" column="user_pw" />
		<result property="userName" column="user_name" />
		<result property="job" column="job" />
		<result property="coin" column="coin" />
		<result property="enabled" column="enabled" />
		<result property="regDate" column="reg_date" />
		<result property="updDate" column="upd_date" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>
	<resultMap type="MemberAuth" id="authMap">
		<result property="userNo" column="user_no" />
		<result property="auth" column="auth" />
	</resultMap>


	<insert id="insert">
		INSERT INTO
		MEMBER(user_no,user_id,user_pw,user_name,job)
		VALUES(member_seq.NEXTVAL,#{userId},#{userPw},#{userName},#{job})
	</insert>

	<insert id="insertAuth">
		INSERT INTO MEMBER_AUTH
		VALUES(MEMBER_SEQ.CURRVAL,#{auth})
	</insert>
	<!-- 권한 수정 *CURRVAL넣으면 먼저 회원가입해버린사람 값 들어감 -->
	<insert id="updateAuth">
		INSERT INTO member_auth
		(
		user_no,
		auth
		)
		VALUES
		(
		#{userNo},
		#{auth}
		)
	</insert>

	<update id="update">
		UPDATE member
		SET user_name =#{userName},
		job =#{job}
		WHERE user_no = #{userNo}
	</update>



	<select id="select" resultMap="memberMap">
		SELECT mem.user_no, mem.user_id,
		user_pw, user_name,
		job, reg_date,upd_date,
		auth
		FROM member mem LEFT OUTER JOIN member_auth
		auth ON mem.user_no
		= auth.user_no
		WHERE mem.user_no = #{userNo}
	</select>


	<select id="selectAll">
		<!-- label value와 같은 원리로 서브쿼리 사용 -->
		SELECT USER_NO,USER_ID,USER_PW,USER_NAME,
		(SELECT code_name FROM
		code_detail WHERE group_code =
		'A00' AND code_value = job) AS JOB,
		COIN, REG_DATE
		FROM MEMBER ORDER BY reg_date DESC
	</select>

	<!-- 삭제 처리 -->
	<delete id="delete">
		DELETE FROM member
		WHERE user_no = #{userNo}
	</delete>
	<!-- 권한 삭제 -->
	<delete id="deleteAuth">
		DELETE FROM member_auth
		WHERE user_no = #{userNo}
	</delete>

	<!-- 회원 테이블의 데이터 건수 조회 -->
	<select id="countAll" resultType="int">
		SELECT count(*)
		FROM member
	</select>
	<!-- 사용자 아이디로 회원 정보 조회 -->
	<select id="readByUserId" resultMap="memberMap">
		SELECT mem.user_no,
		mem.user_id,
		user_pw,
		user_name,
		job,
		coin,
		enabled,
		reg_date,
		upd_date,
		auth
		FROM member mem LEFT OUTER JOIN member_auth auth 
		ON mem.user_no= auth.user_no
		WHERE mem.user_id = #{userId}
	</select>

</mapper>